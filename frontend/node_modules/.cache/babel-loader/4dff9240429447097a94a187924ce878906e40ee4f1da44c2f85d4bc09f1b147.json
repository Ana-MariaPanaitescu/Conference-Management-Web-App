{"ast":null,"code":"import axios from 'axios';\nexport const api = axios.create({\n  baseURL: 'http://localhost:3001/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (user !== null && user !== void 0 && user.token) {\n    config.headers.Authorization = `Bearer ${user.token}`;\n  }\n  return config;\n});\n\n// Article-related API calls\nexport const createArticle = async articleData => {\n  try {\n    const response = await api.post('/articles', articleData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getAuthorArticles = async authorId => {\n  try {\n    const response = await api.get(`/articles/author/${authorId}`);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// You might want to add these additional article-related functions\nexport const getArticleById = async articleId => {\n  try {\n    const response = await api.get(`/articles/${articleId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateArticle = async (articleId, articleData) => {\n  try {\n    const response = await api.put(`/articles/${articleId}`, articleData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteArticle = async articleId => {\n  try {\n    const response = await api.delete(`/articles/${articleId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","token","Authorization","createArticle","articleData","response","post","data","error","getAuthorArticles","authorId","get","getArticleById","articleId","updateArticle","put","deleteArticle","delete"],"sources":["D:/Visual Studio Code Projects/Conference-Management-Web-App/frontend/src/services/api.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const api = axios.create({\r\n  baseURL: 'http://localhost:3001/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\napi.interceptors.request.use(config => {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  if (user?.token) {\r\n    config.headers.Authorization = `Bearer ${user.token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Article-related API calls\r\nexport const createArticle = async (articleData) => {\r\n  try {\r\n    const response = await api.post('/articles', articleData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAuthorArticles = async (authorId) => {\r\n  try {\r\n    const response = await api.get(`/articles/author/${authorId}`);\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// You might want to add these additional article-related functions\r\nexport const getArticleById = async (articleId) => {\r\n  try {\r\n    const response = await api.get(`/articles/${articleId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateArticle = async (articleId, articleData) => {\r\n  try {\r\n    const response = await api.put(`/articles/${articleId}`, articleData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteArticle = async (articleId) => {\r\n  try {\r\n    const response = await api.delete(`/articles/${articleId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC9BC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,IAAIJ,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEK,KAAK,EAAE;IACfN,MAAM,CAACJ,OAAO,CAACW,aAAa,GAAG,UAAUN,IAAI,CAACK,KAAK,EAAE;EACvD;EACA,OAAON,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMQ,aAAa,GAAG,MAAOC,WAAW,IAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMjB,GAAG,CAACkB,IAAI,CAAC,WAAW,EAAEF,WAAW,CAAC;IACzD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,QAAQ,IAAK;EACnD,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMjB,GAAG,CAACuB,GAAG,CAAC,oBAAoBD,QAAQ,EAAE,CAAC;IAC9D,OAAOL,QAAQ;EACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,cAAc,GAAG,MAAOC,SAAS,IAAK;EACjD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMjB,GAAG,CAACuB,GAAG,CAAC,aAAaE,SAAS,EAAE,CAAC;IACxD,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,aAAa,GAAG,MAAAA,CAAOD,SAAS,EAAET,WAAW,KAAK;EAC7D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMjB,GAAG,CAAC2B,GAAG,CAAC,aAAaF,SAAS,EAAE,EAAET,WAAW,CAAC;IACrE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMQ,aAAa,GAAG,MAAOH,SAAS,IAAK;EAChD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMjB,GAAG,CAAC6B,MAAM,CAAC,aAAaJ,SAAS,EAAE,CAAC;IAC3D,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAepB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}