{"ast":null,"code":"import axios from 'axios';\nexport const api = axios.create({\n  baseURL: 'http://localhost:3000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (user !== null && user !== void 0 && user.token) {\n    config.headers.Authorization = `Bearer ${user.token}`;\n  }\n  return config;\n});","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","token","Authorization"],"sources":["D:/Visual Studio Code Projects/Conference-Management-Web-App/frontend/src/services/api.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const api = axios.create({\r\n  baseURL: 'http://localhost:3000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\napi.interceptors.request.use(config => {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  if (user?.token) {\r\n    config.headers.Authorization = `Bearer ${user.token}`;\r\n  }\r\n  return config;\r\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC9BC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,IAAIJ,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEK,KAAK,EAAE;IACfN,MAAM,CAACJ,OAAO,CAACW,aAAa,GAAG,UAAUN,IAAI,CAACK,KAAK,EAAE;EACvD;EACA,OAAON,MAAM;AACf,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}